specVersion: 0.0.4
description: GMX
repository: https://github.com/gmx-io/gmx-subgraph
schema:
  file: ./schema.graphql

dataSources:
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorBTC
  #   network: mode-testnet
  #   source:
  #     address: '0xB921aEe0abD048E2FDd1E15aB2ddFBE589884522'
  #     abi: ChainlinkAggregator
  #     startBlock: 15481873
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedBTC
  #     file: ./src/pricesMapping.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorETH
  #   network: mode-testnet
  #   source:
  #     address: '0x8f1ba66d30a1f01bd766eB3Bab0E8AfBeE164252'
  #     abi: ChainlinkAggregator
  #     startBlock: 15481868
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedETH
  #     file: ./src/pricesMapping.ts
  # - kind: ethereum/contract
  #   name: ChainlinkAggregatorSYS
  #   network: mode-testnet
  #   source:
  #     address: '0x9Dff2CeBccA79F9090340604b58612fc3e818DCb'
  #     abi: ChainlinkAggregator
  #     startBlock: 15482071
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - ChainlinkPrice
  #     abis:
  #       - name: ChainlinkAggregator
  #         file: ./abis/ChainlinkAggregator.json
  #     eventHandlers:
  #       - event: AnswerUpdated(indexed int256,indexed uint256,uint256)
  #         handler: handleAnswerUpdatedSYS
  #     file: ./src/pricesMapping.ts
  - kind: ethereum/contract
    name: GlpManager
    network: mode-testnet
    source:
      address: '0x3E0dd58c412982dE0B4e55A569f8Eb298147d3Cc'
      abi: GlpManager
      startBlock: 14078169
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - HourlyGlpStat
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/mapping.ts

  # - kind: ethereum/contract
  #   name: GlpManager2
  #   network: mode-testnet
  #   source:
  #     address: '0x459aF0e66F49302DaE40Ba548FbBb16E3263C71F'
  #     abi: GlpManager
  #     startBlock: 7824336
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - HourlyGlpStat
  #     abis:
  #       - name: GlpManager
  #         file: ./abis/GlpManager.json
  #     eventHandlers:
  #       - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleAddLiquidity
  #       - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
  #         handler: handleRemoveLiquidity
  #     file: ./src/mapping.ts

  - kind: ethereum/contract
    name: OrderBook
    network: mode-testnet
    source:
      address: '0x78b2dEc9e2Eea9c4dC75E61b7437dA9d6Be4e6f8'
      abi: OrderBook
      startBlock: 14085996
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Order
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder
        - event: UpdateIncreaseOrder(indexed address,uint256,address,address,bool,uint256,uint256,bool)
          handler: handleUpdateIncreaseOrder

        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder
        - event: UpdateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool)
          handler: handleUpdateDecreaseOrder

        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
        - event: UpdateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleUpdateSwapOrder
      file: ./src/ordersMapping.ts

  - kind: ethereum/contract
    name: FastPriceFeed
    network: mode-testnet
    source:
      address: '0xDADD2Ec9B01a174Ec2120065314631bE3560136C'
      abi: FastPriceFeed
      startBlock: 14217254
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceFeed
          file: ./abis/FastPriceFeed.json
      eventHandlers:
        - event: SetPrice(address,uint256)
          handler: handleSetPrice
      file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FastPriceEvents
    network: mode-testnet
    source:
      address: '0x5ACC4e84430B21794b5863442095c72d58eC1Af0'
      abi: FastPriceEvents
      startBlock: 14217250
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - FastPrice
      abis:
        - name: FastPriceEvents
          file: ./abis/FastPriceEvents.json
      eventHandlers:
        - event: PriceUpdate(address,uint256,address)
          handler: handlePriceUpdate
      file: ./src/pricesMapping.ts

  # - kind: ethereum/contract
  #   name: UniswapPool
  #   network: mode-testnet
  #   source:
  #     address: '0x80A9ae39310abf666A87C743d6ebBD0E8C42158E'
  #     abi: UniswapPoolV3
  #     startBlock: 7824336
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.4
  #     language: wasm/assemblyscript
  #     entities:
  #       - UniswapPrice
  #     abis:
  #       - name: UniswapPoolV3
  #         file: ./abis/UniswapPoolV3.json
  #     eventHandlers:
  #       - event: Swap(indexed address,indexed address,int256,int256,uint160,uint128,int24)
  #         handler: handleUniswapGmxEthSwap
  #     file: ./src/pricesMapping.ts

  - kind: ethereum/contract
    name: FeeGmxRewardDistributor # sbfMOXDistributor 
    network: mode-testnet
    source:
      address: '0x1CEA8732c93ED0fA8Bc493F8919fa80f67CFdF7D'
      abi: RewardDistributor
      startBlock: 14105427
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToGmx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EsgmxGmxRewardDistributor # sGMXDistributor
    network: mode-testnet
    source:
      address: '0x5013D53e4e1634E08B2281341B4F560Db6A6f100'
      abi: RewardDistributor
      startBlock: 14105395
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsgmxToGmx
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: FeeGlpRewardDistributor # fsGLPDistributor
    network: mode-testnet
    source:
      address: '0x57B0666CD0681E6a75fDF2FaA5Cf957E8830c982'
      abi: RewardDistributor
      startBlock: 14105442
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEthToGlp
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: EsgmxGlpRewardDistributor # fsMLPDistributor
    network: mode-testnet
    source:
      address: '0xf84de888dEe9541cAc1460b574e37dE7A9d34E64'
      abi: RewardDistributor
      startBlock: 14105458
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - GmxStat
      abis:
        - name: RewardDistributor
          file: ./abis/RewardDistributor.json
      eventHandlers:
        - event: Distribute(uint256)
          handler: handleDistributeEsgmxToGlp
      file: ./src/mapping.ts
  - kind: ethereum/contract
    name: Vault2
    network: mode-testnet
    source:
      address: '0x03f15224338bDE82C88143E7b4251fFB40eFE575'
      abi: Vault
      startBlock: 14078127
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - TradingStat
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      eventHandlers:
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
      file: ./src/tradingMapping.ts
  - kind: ethereum/contract
    name: Vault
    network: mode-testnet
    source:
      address: '0x03f15224338bDE82C88143E7b4251fFB40eFE575'
      abi: Vault
      startBlock: 14078127
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - Swap
        - IncreasePosition
        - DecreasePosition
        - HourlyVolume
        - HourlyVolumeBySource
        - HourlyVolumeByToken
        - HourlyFee
        - Transaction
        - FundingFee
      abis:
        - name: Vault
          file: ./abis/VaultV2.json
      # callHandlers: # doesn't work on Arbitrum
      #   - function: setTokenConfig(address,uint256,uint256,uint256,uint256,bool,bool)
      #     handler: handleSetTokenConfig
      eventHandlers:
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
      file: ./src/mapping.ts

  - kind: ethereum/contract
    name: PositionRouter
    network: mode-testnet
    source:
      address: '0x48977375B564DC48b1ab579C6974F6dB8D1B6347'
      abi: PositionRouter
      startBlock: 14085738
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      entities:
        - CreateIncreasePosition
        - CreateDecreasePosition
      abis:
        - name: PositionRouter
          file: ./abis/PositionRouter.json
      eventHandlers:
        - event: CreateIncreasePosition(indexed address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateIncreasePosition
        - event: CreateDecreasePosition(indexed address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateDecreasePosition
        - event: CancelIncreasePosition(indexed address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256)
          handler: handleCancelIncreasePosition
        - event: CancelDecreasePosition(indexed address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleCancelDecreasePosition
      file: ./src/mapping.ts
