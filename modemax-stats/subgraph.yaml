specVersion: 0.0.8
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: Vault
    network: mode-testnet
    source:
      address: "0x03f15224338bDE82C88143E7b4251fFB40eFE575"
      abi: Vault
      startBlock: 14078127
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: Vault
          file: ./abis/Vault.json
        - name: ERC20
          file: ../abis/IERC20.json
      eventHandlers:
        - event: BuyUSDG(address,address,uint256,uint256,uint256)
          handler: handleBuyUSDG
        - event: ClosePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleClosePosition
        - event: CollectMarginFees(address,uint256,uint256)
          handler: handleCollectMarginFees
        - event: CollectSwapFees(address,uint256,uint256)
          handler: handleCollectSwapFees
        # - event: DecreaseGuaranteedUsd(address,uint256)
        #   handler: handleDecreaseGuaranteedUsd
        - event: DecreasePoolAmount(address,uint256)
          handler: handleDecreasePoolAmount
        - event: DecreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleDecreasePosition
        - event: DecreaseReservedAmount(address,uint256)
          handler: handleDecreaseReservedAmount
        - event: DecreaseUsdgAmount(address,uint256)
          handler: handleDecreaseUsdgAmount
        # - event: DirectPoolDeposit(address,uint256)
        #   handler: handleDirectPoolDeposit
        # - event: IncreaseGuaranteedUsd(address,uint256)
        #   handler: handleIncreaseGuaranteedUsd
        - event: IncreasePoolAmount(address,uint256)
          handler: handleIncreasePoolAmount
        - event: IncreasePosition(bytes32,address,address,address,uint256,uint256,bool,uint256,uint256)
          handler: handleIncreasePosition
        - event: IncreaseReservedAmount(address,uint256)
          handler: handleIncreaseReservedAmount
        - event: IncreaseUsdgAmount(address,uint256)
          handler: handleIncreaseUsdgAmount
        - event: LiquidatePosition(bytes32,address,address,address,bool,uint256,uint256,uint256,int256,uint256)
          handler: handleLiquidatePosition
        - event: SellUSDG(address,address,uint256,uint256,uint256)
          handler: handleSellUSDG
        - event: Swap(address,address,address,uint256,uint256,uint256,uint256)
          handler: handleSwap
        - event: UpdateFundingRate(address,uint256)
          handler: handleUpdateFundingRate
        # - event: UpdatePnl(bytes32,bool,uint256)
        #   handler: handleUpdatePnl
        - event: UpdatePosition(bytes32,uint256,uint256,uint256,uint256,uint256,int256)
          handler: handleUpdatePosition
      file: ./src/vault.ts
  - kind: ethereum
    name: GlpManager
    network: mode-testnet
    source:
      address: "0x3E0dd58c412982dE0B4e55A569f8Eb298147d3Cc"
      abi: GlpManager
      startBlock: 14078169
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: GlpManager
          file: ./abis/GlpManager.json
      eventHandlers:
        - event: AddLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleAddLiquidity
        - event: RemoveLiquidity(address,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidity
      file: ./src/glp-manager.ts
  - kind: ethereum
    name: OrderBook
    network: mode-testnet
    source:
      address: "0x1dc05C755eaFF5C5A7ea1b8C4F1c0C4C2De9389E"
      abi: OrderBook
      startBlock: 20802037
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: OrderBook
          file: ./abis/OrderBook.json
      eventHandlers:
        - event: CreateIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateIncreaseOrder
        - event: CancelIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelIncreaseOrder
        - event: ExecuteIncreaseOrder(indexed address,uint256,address,uint256,address,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteIncreaseOrder
        - event: UpdateIncreaseOrder(indexed address,uint256,address,address,bool,uint256,uint256,bool)
          handler: handleUpdateIncreaseOrder
        - event: CreateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCreateDecreaseOrder
        - event: CancelDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256)
          handler: handleCancelDecreaseOrder
        - event: ExecuteDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool,uint256,uint256)
          handler: handleExecuteDecreaseOrder
        - event: UpdateDecreaseOrder(indexed address,uint256,address,uint256,address,uint256,bool,uint256,bool)
          handler: handleUpdateDecreaseOrder
        - event: CreateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCreateSwapOrder
        - event: CancelSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleCancelSwapOrder
        - event: ExecuteSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,uint256,bool,bool,uint256)
          handler: handleExecuteSwapOrder
        - event: UpdateSwapOrder(indexed address,uint256,address[],uint256,uint256,uint256,bool,bool,uint256)
          handler: handleUpdateSwapOrder
      file: ./src/order-book.ts
  - kind: ethereum
    name: PositionRouter
    network: mode-testnet
    source:
      address: "0x376c6ec3bA577827000deBbd979B321331469b41"
      abi: PositionRouter
      startBlock: 20780636
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: PositionRouter
          file: ./abis/PositionRouter.json
      eventHandlers:
        - event: CreateIncreasePosition(indexed address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateIncreasePosition
        - event: CreateDecreasePosition(indexed address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256,uint256)
          handler: handleCreateDecreasePosition
        - event: CancelIncreasePosition(indexed address,address[],address,uint256,uint256,uint256,bool,uint256,uint256,uint256,uint256)
          handler: handleCancelIncreasePosition
        - event: CancelDecreasePosition(indexed address,address[],address,uint256,uint256,bool,address,uint256,uint256,uint256,uint256,uint256)
          handler: handleCancelDecreasePosition
      file: ./src/position-router.ts
  - kind: ethereum
    name: RewardRouterMT
    network: mode-testnet
    source:
      address: "0xdcD648A4c5AF4D39b2E735C1791d6f3aE3947e38"
      abi: RewardRouterMT
      startBlock: 20599278
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Token
      abis:
        - name: RewardRouterMT
          file: ./abis/RewardRouterMT.json
      eventHandlers:
        - event: StakeWlp(address,uint256)
          handler: handleStakeWlp
        - event: UnstakeWlp(address,uint256)
          handler: handleUnstakeWlp
        - event: StakeWmx(address,address,uint256)
          handler: handleStakeWmx
        - event: UnstakeWmx(address,address,uint256)
          handler: handleUnstakeWmx
      file: ./src/reward-router-mt.ts
